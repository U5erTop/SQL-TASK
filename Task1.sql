-- ЗАДАНИЕ 1: БАЗОВЫЙ СИНТАКСИС
-- Цель: Научиться писать простые SELECT запросы, фильтровать и сортировать данные.

-- 1. Создаем временную таблицу для примера (чтобы не засорять базу данных)
USE tempdb; -- Используем системную базу tempdb, которая очищается при перезагрузке сервера

-- Сначала проверяем, существует ли таблица, и удаляем её, если да (чтобы избежать ошибок)
IF OBJECT_ID('Books', 'U') IS NOT NULL
    DROP TABLE Books;

-- Создаем таблицу Books
CREATE TABLE Books (
    BookID INT IDENTITY(1,1) PRIMARY KEY, -- Уникальный ID, автоинкремент
    Title NVARCHAR(100) NOT NULL,
    Author NVARCHAR(50) NOT NULL,
    YearPublished INT NULL,
    Price DECIMAL(10, 2) NULL
);

-- 2. Заполняем таблицу тестовыми данными
INSERT INTO Books (Title, Author, YearPublished, Price)
VALUES
    ('Война и мир', 'Лев Толстой', 1869, 1500.50),
    ('Идиот', 'Федор Достоевский', 1869, 980.00),
    ('1984', 'Джордж Оруэлл', 1949, 750.00),
    ('Мастер и Маргарита', 'Михаил Булгаков', 1967, 1200.00),
    ('Гарри Поттер и философский камень', 'Джоан Роулинг', 1997, 900.00),
    ('Убить пересмешника', 'Харпер Ли', 1960, 850.50),
    ('Дюна', 'Фрэнк Герберт', 1965, 950.00);

-- 3. ВЫПОЛНЕНИЕ ЗАДАЧ:

-- Задача 1: Вывести всю информацию о всех книгах.
SELECT * FROM Books;

-- Задача 2: Вывести только названия и авторов всех книг.
SELECT Title, Author
FROM Books;

-- Задача 3: Вывести книги, опубликованные после 2000 года.
-- (В нашем наборе данных таких нет, поэтому результат будет пустым)
SELECT *
FROM Books
WHERE YearPublished > 2000;

-- Задача 4: Вывести книги, отсортированные по автору в алфавитном порядке (A-Z).
SELECT *
FROM Books
ORDER BY Author ASC; -- ASC (по возрастанию) можно не писать, это значение по умолчанию

-- Задача 5: Вывести три самые дорогие книги.
SELECT TOP(3) * -- TOP(n) ограничивает вывод первыми n записями
FROM Books
ORDER BY Price DESC; -- Сортируем по цене по убыванию